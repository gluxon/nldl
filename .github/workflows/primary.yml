name: primary

on:
  schedule:
    - cron: "0 0 * * 6"
  push:
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - name: Annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings

  rustfmt:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - name: Run Rustfmt
        run: cargo fmt --all -- --check

  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - name: Install llvm-tools-preview
        uses: actions-rs/toolchain@v1
        with:
          components: llvm-tools-preview
          override: true
          toolchain: stable
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          LLVM_PROFILE_FILE: "nldl-%p-%m.profraw"
          RUSTFLAGS: '-Cinstrument-coverage'
      - name: Install grcov
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: grcov
      - id: coverage
        run: |
          grcov \
            --branch \
            --ignore-not-existing \
            --llvm \
            --binary-path=target/debug/ \
            --output-path=target/debug/lcov.info \
            --output-type=lcov \
            --source-dir=. \
            .
          echo '::set-output name=report::target/debug/lcov.info'
      - uses: codecov/codecov-action@v2
        with:
          files: ${{ steps.coverage.outputs.report }}

  check-readme:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - name: Install cargo-readme
        run: cargo install cargo-readme
      - name: Check README.md is up to date
        run: |
          (cd nldl && cargo readme > ../README.md)
          git diff --exit-code README.md
